
#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}-{branch}

# branches to build
branches:
  # blacklist
  except:
    - gh-pages

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
skip_commits:
  # Default `skip` messages are applied even on tag builds with APPVEYOR_IGNORE_COMMIT_FILTERING_ON_TAG==true
  message: /\[_skip ci_\]|\[_ci skip_\]|\[_skip_ci_\]|\[_ci_skip_\]/
  files:
    - README.md
    - THIRD_PARTY_NOTICES.md
#    - docs/*
#    - '**/*.png'
#    - '**/*.jpg'
#    - '**/*.jpeg'
#    - '**/*.bmp'
#    - '**/*.gif'
#    - '**/*.js'
#    - '**/*.txt'
#    - '**/*.md'

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# environment variables
environment:
  APPVEYOR_IGNORE_COMMIT_FILTERING_ON_TAG: true
  git_user_email: qwertiest@mail.ru
  git_user_name: TheQwertiest
  GITHUB_ACCESS_TOKEN:
    secure: gBfHQnRcGcTS0yQXWOHhKfDkTZfIBwPIDjTsCQOGmOSPkRqs1QPYBX47BjCvJKim

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

cache:
  - workspaces\packages -> **\packages.config
  - c:\tools\vcpkg\installed

# scripts that run after cloning repository
install:
  - vcpkg install cpprestsdk:x86-windows-static
  - vcpkg integrate install
  - py -u scripts\setup.py

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform:
  - Win32

# build Configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true                  # enable MSBuild parallel builds
  project: workspaces\foo_spotify.sln      # path to Visual Studio solution or project

  # MSBuild verbosity level
  verbosity: normal

# scripts to run before build
before_build:
  - nuget restore workspaces\foo_spotify.sln

# to run your custom scripts instead of automatic MSBuild
build_script:

# scripts to run after build (working directory and environment changes are persisted from the previous steps)
after_build:

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# to disable automatic builds
#build: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  # pushing a single file with environment variable in path and "Deployment name" specified
  - path: _result\$(platform)_$(configuration)\foo_spotify.fb2k-component
    name: SPTF package (Release)
  - path: _result\$(platform)_$(configuration)\foo_spotify_pdb.zip
    name: SPTF PDB package (Release)
  - path: _result\$(platform)_$(configuration)\foo_spotify.fb2k-component_debug
    name: SPTF package (Debug)

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:
  description: 'Dummy description'
  provider: GitHub
  auth_token: $(GITHUB_ACCESS_TOKEN)
  artifact: /foo_spotify.*/           # upload all NuGet packages to release assets
  prerelease: true
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only


# scripts to run before deployment
before_deploy:

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
# deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:

#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:
